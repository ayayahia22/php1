<mxfile host="app.diagrams.net" modified="2023-09-04T15:23:29.506Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36" version="21.7.2" etag="LM0XyPuSaV-o4i21vGhe" type="device">
  <diagram id="nr_waWkO1XJicMMawMq5" name="Page-1">
    <mxGraphModel dx="803" dy="500" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="wtmF9lX-q2i9UwXeHCfy-2" value="&lt;p class=&quot;MsoNormal&quot; align=&quot;center&quot; style=&quot;margin-left:36.0pt;text-align:center&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:20.0pt;&#xa;line-height:115%;background:white;mso-highlight:white&quot;&gt;characteristics of PHP&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; align=&quot;center&quot; style=&quot;margin-left:36.0pt;text-align:center&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:20.0pt;&#xa;line-height:115%;background:white;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:0cm;text-indent:-18.0pt;mso-list:l1 level1 lfo2&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;&#xa;line-height:115%;background:white;mso-highlight:white&quot;&gt;&lt;span style=&quot;mso-list:&#xa;Ignore&quot;&gt;1.&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;Variables:&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l3 level1 lfo4&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Case Sensitivity: PHP variable names are case-sensitive.&#xa;This means that variables $myVariable and $myvariable are considered different&#xa;variables. Pay attention to consistent casing when referencing variables.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l3 level1 lfo4&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Dynamic Typing: PHP uses dynamic typing, allowing&#xa;variables to hold values of different types. Variable types are determined&#xa;automatically based on the assigned values.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l3 level1 lfo4&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Variable Naming: PHP variable names start with a dollar&#xa;sign ($), followed by a letter or underscore. They can include alphanumeric characters&#xa;and underscores. PHP is case-sensitive, so $myVariable and $myvariable are&#xa;considered different variables.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l3 level1 lfo4&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Variable Scope: PHP supports various variable scopes,&#xa;including global, local, and static. Variables declared within a function are&#xa;local by default, while those declared outside functions have global scope. The&#xa;global keyword is used to access global variables within a function.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l3 level1 lfo4&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Variable Variables: PHP allows the use of variable&#xa;variables, where the name of a variable can be determined dynamically. For&#xa;example, $varName = &quot;myVariable&quot;; $$varName = 10; creates a variable&#xa;named $myVariable with a value of 10.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:0cm;text-indent:-18.0pt;mso-list:l1 level1 lfo2&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;&#xa;line-height:115%;background:white;mso-highlight:white&quot;&gt;&lt;span style=&quot;mso-list:&#xa;Ignore&quot;&gt;2.&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;Functions:&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo1&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Case Sensitivity: PHP function names are not&#xa;case-sensitive. You can call a function using any combination of uppercase and&#xa;lowercase letters. For example, myFunction(), myfunction(), and MYFUNCTION()&#xa;all refer to the same function.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo1&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Function Definition: PHP functions are defined using the&#xa;function keyword, followed by the function name and parentheses containing any&#xa;parameters. The function body is enclosed in curly braces.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo1&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Function Invocation: Functions can be called by using&#xa;their name followed by parentheses. Arguments can be passed within the&#xa;parentheses if the function requires them.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo1&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Return Values: PHP functions can return values using the&#xa;return statement. Functions can return any data type, including arrays and&#xa;objects.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo1&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;Variable Scope: Similar to variables, PHP functions have&#xa;their own local scope. Variables declared within a function are only accessible&#xa;within that function by default.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:0cm;text-indent:-18.0pt;mso-list:l1 level1 lfo2&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;&#xa;line-height:115%;background:white;mso-highlight:white&quot;&gt;&lt;span style=&quot;mso-list:&#xa;Ignore&quot;&gt;3.&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;Reserved&#xa;Words:&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo3&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;PHP has a set of reserved words that have predefined&#xa;meanings and cannot be used as identifiers (e.g., variable names or function&#xa;names). These reserved words are case-insensitive, meaning they can be written&#xa;in any combination of uppercase and lowercase letters. Some common reserved&#xa;words in PHP include if, else, while, for, switch, class, function, echo,&#xa;return, include, require, and many more.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo3&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:&#xa;white&quot;&gt;&lt;span style=&quot;mso-list:Ignore&quot;&gt;●&lt;span style=&quot;font:7.0pt &amp;quot;Times New Roman&amp;quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xa;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span dir=&quot;LTR&quot;&gt;&lt;/span&gt;&lt;b style=&quot;mso-bidi-font-weight:&#xa;normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;&#xa;mso-highlight:white&quot;&gt;It&#39;s important to avoid using reserved words as variable&#xa;or function names to prevent conflicts and ensure proper code execution.&#xa;However, remember that the case of the reserved words does not matter.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#xa;&#xa;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;b style=&quot;mso-bidi-font-weight:normal&quot;&gt;&lt;span lang=&quot;EN&quot; style=&quot;font-size:13.0pt;line-height:115%;background:white;mso-highlight:white&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="10" y="600" width="560" height="3120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
